{"version":3,"sources":["components/Modal/Modal.jsx","components/FavoriteCard/FavoriteCard.jsx","api/api.jsx","api/weather.jsx","components/FavoriteWeather/FavoriteWeather.jsx","components/ChangeMode/ChangeMode.jsx","components/SavedCity/SavedCity.jsx","components/SearchCity/SearchCity.jsx","App.js","index.js"],"names":["Modal","weather","city","active","setActive","error","useEffect","handleKeyPress","e","keyCode","document","addEventListener","removeEventListener","handlerModalClose","weatherData","temp","feels_like","humidity","pressure","className","onClick","Math","floor","cashedData","localStorage","getItem","includes","setItem","addFavorite","FavoriteCard","data","cityName","apiClient","axios","create","baseURL","getWeather","a","get","response","console","log","FavoriteWeather","favoriteCity","useState","resFavorite","setResFavorite","request","map","Promise","all","then","responses","length","obj","i","main","name","ChangeMode","changeMode","toggleChangeMode","checkedA","checkedB","state","setState","Switch","checked","onChange","event","target","inputProps","SavedCity","apiKey","setData","savedCity","require","SearchCity","setCity","setWeather","modalActive","setModalActive","setFavoriteCity","setChangeMode","cityRes","setCityRes","setError","favoriteCities","citiesArr","slice","split","type","value","onKeyPress","key","res","blur","placeholder","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f7ece3d5.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\n\nfunction Modal({weather, city, active, setActive, error}) {\n\n    const addFavorite = () => {\n        const cashedData = localStorage.getItem('favorite') || ''\n        if (!cashedData.includes(city)) {\n            localStorage.setItem(\"favorite\", cashedData + ' ' + city)\n        }\n    }\n\n    useEffect(() => {\n        const handleKeyPress = (e) => {\n            if (e.keyCode === 27) {\n                setActive(false)\n            }\n        }\n\n        document.addEventListener('keydown', (e) => handleKeyPress(e))\n        return () => document.removeEventListener('keypress', (e) => handleKeyPress(e))\n\n    }, [])\n\n    const handlerModalClose = () => {\n        setActive(false)\n    }\n\n    const weatherData = {\n        temp: weather.temp,\n        feels_like: weather.feels_like,\n        humidity: weather.humidity,\n        pressure: weather.pressure\n    }\n\n    const {temp, feels_like, humidity, pressure} = weatherData;\n\n    return (\n        <div>\n            {error ? <div className=\"modal__error\">\"Ошибка запроса\"</div> :\n                <div className={active ? \"modal active\" : \"modal\"} onClick={handlerModalClose}>\n                    <div className=\"modal__content\">\n                        <div className=\"modal__content-close\" onClick={handlerModalClose}>x</div>\n                        <h2 className=\"modal__title\">{city}</h2>\n                        <div className=\"modal__text\">\n                            <div className=\"modal__content-temp\"><p>Температура</p><b>{Math.floor(temp)}&#8451;</b>\n                            </div>\n                            <div className=\"modal__content-feels\"><p>Ощущается как</p>\n                                <b>{Math.floor(feels_like)}&#8451;</b></div>\n                            <div className=\"modal__content-humidity\"><p>Влажность</p><b>{humidity}%</b></div>\n                            <div className=\"modal__content-pressure\"><p>Давление</p><b>{pressure}</b></div>\n                        </div>\n                        <div className=\"modal__add\" onClick={() => addFavorite()}>Добавить в избранное</div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Modal;","function FavoriteCard({data, cityName}) {\n\n    return (\n        <div className=\"favoriteCard\">\n            <h3 className=\"favoriteCard__title\">{cityName}</h3>\n            <div className=\"favoriteCard__temp\">\n                <b>{Math.floor(data.temp)}&#8451;</b>\n            </div>\n            <div className=\"favoriteCard__content-feels\">\n                <p>Feels_like: </p><b>{Math.floor(data.feels_like)}&#8451;</b>\n            </div>\n            <div className=\"favoriteCard__content-humidity\">\n                <p>Humidity: </p><b>{data.humidity}%</b>\n            </div>\n            <div className=\"favoriteCard__content-pressure\">\n                <p>Pressure: </p><b>{data.pressure}</b>\n            </div>\n        </div>\n    )\n}\n\nexport default FavoriteCard;","import axios from \"axios\";\n\nconst apiClient = axios.create({\n    baseURL: `https://api.openweathermap.org/data/2.5/`\n})\n\nexport default apiClient","import apiClient from \"./api\";\n\nconst getWeather = async (city) => {\n    const apiKey = \"432e0e516b136001af816e0e90e80ca2\"\n    try {\n        const response = await apiClient.get(\n            `weather?q=${city}&units=metric&appid=${apiKey}`\n        )\n        return response.data\n    } catch (error) {\n        console.log('error')\n    }\n}\nexport default getWeather","import React, {useState, useEffect} from \"react\";\nimport FavoriteCard from \"../FavoriteCard/FavoriteCard\";\nimport getWeather from \"../../api/weather\";\n\nfunction FavoriteWeather({favoriteCity}) {\n\n    const [resFavorite, setResFavorite] = useState([]);\n\n    useEffect(() => {\n        if (favoriteCity) {\n            let request = favoriteCity\n                .map(city => getWeather(city)\n                )\n            Promise.all(request)\n                .then((responses) => {\n                    setResFavorite(responses)\n                })\n        }\n    }, [favoriteCity])\n\n    return (\n        <div className=\"favoriteWeather\">\n            {resFavorite.length !== 0\n                ? resFavorite.map((obj, i) => {\n                        return (\n                            <FavoriteCard key={i}\n                                          data={obj.main}\n                                          cityName={obj.name}\n                            />\n                        )\n                    }\n                ) : <div className=\"favoriteWeather__noData\">Данные загружаются из избранного...</div>\n            }\n        </div>\n    )\n}\n\nexport default FavoriteWeather;\n","import React, {useState} from \"react\";\nimport Switch from '@material-ui/core/Switch';\n\nfunction ChangeMode({changeMode, toggleChangeMode}) {\n    const [state, setState] = useState({\n        checkedA: true,\n        checkedB: true,\n    });\n\n    const handleChange = (event) => {\n        setState({...state, [event.target.name]: event.target.checked});\n        toggleChangeMode()\n    };\n\n    return (\n        <div className=\"changeMode\">Change mode:\n            <Switch\n                checked={state.checkedA}\n                onChange={handleChange}\n                name=\"checkedA\"\n                inputProps={{'aria-label': 'secondary checkbox'}}\n            />\n        </div>\n    );\n}\n\nexport default ChangeMode;","import FavoriteCard from \"../FavoriteCard/FavoriteCard\";\nimport {useEffect, useState} from \"react\";\nimport getWeather from \"../../api/weather\";\n\nfunction SavedCity({apiKey}) {\n    const [data, setData] = useState([])\n    const savedCity = require('../savedcities.json')\n\n    useEffect(() => {\n        if (savedCity) {\n            let request = savedCity\n                .map(city => getWeather(city)\n                )\n            Promise.all(request)\n                .then((responses) => {\n                    setData(responses)\n                })\n        }\n    }, [])\n\n    return (\n        <div className=\"favoriteWeather\">\n            {data.map((obj, i) => <FavoriteCard key={i}\n                                                data={obj.main}\n                                                cityName={obj.name}/>\n            )\n            }\n        </div>\n    )\n}\n\nexport default SavedCity;","import {useState, useEffect} from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport FavoriteWeather from \"../FavoriteWeather/FavoriteWeather\";\nimport ChangeMode from \"../ChangeMode/ChangeMode\";\nimport SavedCity from \"../SavedCity/SavedCity\";\nimport getWeather from \"../../api/weather\";\n\nfunction SearchCity() {\n\n    const [city, setCity] = useState(\"\")\n    const [weather, setWeather] = useState({})\n    const [modalActive, setModalActive] = useState(false)\n    const [favoriteCity, setFavoriteCity] = useState([])\n    const [changeMode, setChangeMode] = useState(true)\n    const [cityRes, setCityRes] = useState(\"\")\n    const [error, setError] = useState(false)\n    const favoriteCities = localStorage.getItem('favorite')\n    const citiesArr = favoriteCities ? favoriteCities.slice(1).split(' ') : favoriteCities\n\n    useEffect(() => {\n        setFavoriteCity(citiesArr)\n    }, [])\n\n    const searchWeather = e => {\n        if (e.key === 'Enter') {\n            getWeather(city)\n                .then(res => {\n                        if (res) {\n                            setWeather(res.main)\n                            setCityRes(res.name)\n                        } else {\n                            setError(true)\n                        }\n                    }\n                )\n            setModalActive(true)\n            e.target.blur()\n        }\n    }\n\n    const toggleChangeMode = () => {\n        setChangeMode(!changeMode);\n    };\n\n    return (\n        <div className=\"search-wrapper\">\n            <span className=\"search-label\">\n               Search City\n            </span>\n            <ChangeMode changeMode={setChangeMode} toggleChangeMode={toggleChangeMode}/>\n            <input type=\"text\" className=\"search-input\"\n                   value={city}\n                   onChange={(e) => setCity(e.target.value)}\n                   onKeyPress={searchWeather}\n                   placeholder='Enter the city. Example: London'/>\n            <Modal\n                weather={weather}\n                active={modalActive}\n                setActive={setModalActive}\n                city={cityRes}\n                error={error}\n            />\n            {changeMode ?\n                <FavoriteWeather favoriteCity={favoriteCity} city={cityRes}/>\n                :\n                <SavedCity/>\n            }\n        </div>\n    )\n}\n\nexport default SearchCity;","import SearchCity from \"./components/SearchCity/SearchCity\";\nimport './scss/app.scss';\n\nfunction App() {\n\n    return (\n        <div className=\"wrapper\">\n            <h1 className=\"title\">\n                Weather App\n            </h1>\n            <SearchCity/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/app.scss';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}