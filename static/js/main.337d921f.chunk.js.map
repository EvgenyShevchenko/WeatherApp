{"version":3,"sources":["components/Modal/Modal.jsx","components/FavoriteCard/FavoriteCard.jsx","components/FavoriteWeather/FavoriteWeather.jsx","components/ChangeMode/ChangeMode.jsx","components/SavedCity/SavedCity.jsx","components/SearchCity/SearchCity.jsx","App.js","index.js"],"names":["Modal","weather","city","active","setActive","useEffect","handleKeyPress","e","keyCode","document","addEventListener","removeEventListener","weatherData","temp","feels_like","humidity","pressure","className","onClick","cashedData","localStorage","getItem","includes","setItem","addFavorite","FavoriteCard","data","cityName","Math","floor","FavoriteWeather","favoriteCity","apiKey","useState","resFavorite","setResFavorite","request","map","axios","Promise","all","then","responses","catch","res","console","log","length","obj","i","main","name","ChangeMode","changeMode","toggleChangeMode","checkedA","checkedB","state","setState","Switch","checked","onChange","event","target","inputProps","SavedCity","setData","savedCity","require","SearchCity","setCity","setWeather","modalActive","setModalActive","setFavoriteCity","setChangeMode","favoriteCities","citiesArr","slice","split","type","value","onKeyPress","key","get","blur","placeholder","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.337d921f.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nfunction Modal({weather, city, active, setActive}) {\r\n\r\n    const addFavorite = () => {\r\n        const cashedData = localStorage.getItem('favorite') || ''\r\n        if(!cashedData.includes(city)) {\r\n            localStorage.setItem(\"favorite\",  cashedData + ' ' + city)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const handleKeyPress = (e) => {\r\n            if (e.keyCode === 27) {\r\n                setActive(false)\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', (e) => handleKeyPress(e))\r\n        return () => document.removeEventListener('keypress', (e) => handleKeyPress(e))\r\n\r\n    }, [])\r\n\r\n    const weatherData = {\r\n        temp: weather.temp,\r\n        feels_like: weather.feels_like,\r\n        humidity: weather.humidity,\r\n        pressure: weather.pressure\r\n    }\r\n\r\n    const {temp, feels_like, humidity, pressure} = weatherData;\r\n\r\n    return (\r\n        <div>\r\n            <div className={active ? \"modal active\" : \"modal\"} onClick={() => setActive(false)}>\r\n                <div className=\"modal__content\">\r\n                    <div className=\"modal__content-close\" onClick={() => setActive(false)}>x</div>\r\n                    <h2 className=\"modal__title\">{city}</h2>\r\n                    <div className=\"modal__text\">\r\n                        <div className=\"modal__content-temp\"><p>Температура</p>{temp}&#8451;</div>\r\n                        <div className=\"modal__content-feels\"><p>Ощущается как</p>{feels_like}&#8451;</div>\r\n                        <div className=\"modal__content-humidity\"><p>Влажность</p>{humidity}%</div>\r\n                        <div className=\"modal__content-pressure\"><p>Давление</p>{pressure}</div>\r\n                    </div>\r\n                    <div className=\"modal__add\" onClick={() => addFavorite()}>Добавить в избранное</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","function FavoriteCard({data, cityName}) {\r\n\r\n    return (\r\n        <div className=\"favoriteCard\">\r\n            <h3 className=\"favoriteCard__title\">{cityName}</h3>\r\n            <div className=\"favoriteCard__temp\">{Math.floor(data.temp)}&#8451;</div>\r\n            <div className=\"favoriteCard__content-feels\"><p>Feels_like: </p><b>{Math.floor(data.feels_like)}&#8451;</b></div>\r\n            <div className=\"favoriteCard__content-humidity\"><p>Humidity: </p><b>{data.humidity}%</b></div>\r\n            <div className=\"favoriteCard__content-pressure\"><p>Pressure: </p><b>{data.pressure}</b></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoriteCard;","import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport FavoriteCard from \"../FavoriteCard/FavoriteCard\";\r\n\r\nfunction FavoriteWeather({favoriteCity, apiKey, city}) {\r\n\r\n    const [resFavorite, setResFavorite] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (favoriteCity) {\r\n            let request = favoriteCity\r\n                .map(city => axios(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`)\r\n                )\r\n            Promise.all(request)\r\n                .then((responses) => {\r\n                    setResFavorite(responses)\r\n                })\r\n                .catch(res => console.log('ошибка запроса введите данные в формате EN:\"London\"'))\r\n        }\r\n    }, [favoriteCity])\r\n\r\n\r\n    return (\r\n        <div className=\"favoriteWeather\">\r\n            {resFavorite.length !== 0\r\n                ? resFavorite.map((obj, i) => {\r\n                        return (\r\n                            <FavoriteCard key={i + obj.data}\r\n                                          data={obj.data.main}\r\n                                          cityName={obj.data.name}\r\n                            />\r\n                        )\r\n                    }\r\n                ) : <div className=\"favoriteWeather__noData\">Данных в избранном нет.</div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default FavoriteWeather;\r\n","import React, {useState} from \"react\";\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nfunction ChangeMode({changeMode, toggleChangeMode}) {\r\n    const [state, setState] = useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({...state, [event.target.name]: event.target.checked});\r\n        toggleChangeMode()\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"changeMode\">Change mode:\r\n            <Switch\r\n                checked={state.checkedA}\r\n                onChange={handleChange}\r\n                name=\"checkedA\"\r\n                inputProps={{'aria-label': 'secondary checkbox'}}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangeMode;","import FavoriteCard from \"../FavoriteCard/FavoriteCard\";\r\nimport axios from \"axios\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction SavedCity ({apiKey}) {\r\nconst [data,setData]= useState([])\r\n    const savedCity = require('../savedcities.json')\r\n\r\n    useEffect(()=>{\r\n        if(savedCity){\r\n        let request = savedCity\r\n            .map(city => axios(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`)\r\n            )\r\n        Promise.all(request)\r\n            .then((responses) => {\r\n                setData(responses)\r\n            })\r\n        }\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"favoriteWeather\">\r\n        { data.map((obj,i) => <FavoriteCard key={i + obj.data}\r\n                                               data={obj.data.main}\r\n                                               cityName={obj.data.name}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedCity;","import {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport FavoriteWeather from \"../FavoriteWeather/FavoriteWeather\";\r\nimport ChangeMode from \"../ChangeMode/ChangeMode\";\r\nimport SavedCity from \"../SavedCity/SavedCity\";\r\n\r\nfunction SearchCity() {\r\n\r\n    const [city, setCity] = useState(\"\")\r\n    const [weather, setWeather] = useState({})\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const [favoriteCity, setFavoriteCity] = useState([])\r\n    const [changeMode, setChangeMode] = useState(true)\r\n    const apiKey = \"432e0e516b136001af816e0e90e80ca2\"\r\n\r\n    const favoriteCities = localStorage.getItem('favorite')\r\n    const citiesArr = favoriteCities ? favoriteCities.slice(1).split(' ') : favoriteCities\r\n\r\n\r\n    useEffect(() => {\r\n        setFavoriteCity(citiesArr)\r\n    }, [])\r\n\r\n\r\n    const searchWeather = e => {\r\n        if (e.key === 'Enter') {\r\n            axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`)\r\n                .then(({data}) => setWeather(data.main))\r\n            setModalActive(true)\r\n            e.target.blur()\r\n        }\r\n    }\r\n\r\n    const toggleChangeMode = () => {\r\n        setChangeMode(!changeMode);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"search-wrapper\">\r\n            <span className=\"search-label\">\r\n               Search City\r\n            </span>\r\n            <ChangeMode changeMode={setChangeMode} toggleChangeMode={toggleChangeMode}/>\r\n            <input type=\"text\" className=\"search-input\"\r\n                   value={city}\r\n                   onChange={(e) => setCity(e.target.value)}\r\n                   onKeyPress={searchWeather}\r\n                   placeholder='Enter the city. Example: London'/>\r\n            <Modal\r\n                weather={weather}\r\n                active={modalActive}\r\n                setActive={setModalActive}\r\n                city={city}\r\n            />\r\n            {changeMode ? <FavoriteWeather favoriteCity={favoriteCity} apiKey={apiKey} city={city}/> :\r\n                <SavedCity apiKey={apiKey}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCity;","import SearchCity from \"./components/SearchCity/SearchCity\";\r\nimport './scss/app.scss';\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <h1 className=\"title\">\r\n                Weather App\r\n            </h1>\r\n            <SearchCity/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './scss/app.scss';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}